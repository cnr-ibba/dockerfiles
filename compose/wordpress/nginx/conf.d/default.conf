
# default.conf

# This conf file tells nginx to serve up media and static files from the filesystem,
# Php file are served by php_fpm server

# The php-fpm component nginx needs to connect to
upstream php_fpm {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server php:9000; # for a web port socket (we'll use this first)
}

# configuration of the server
server {
    # the port your site will be served on
    listen      10080;

    # the domain name it will serve for
    server_name localhost; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # access log: disabled in docker image
    #access_log  /var/log/nginx/log/host.access.log  main;

    #the default error_page
    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # enable the cache which stores information about open files. It does not actually
    # store file contents itself but only information. After 180 secs, cache is wiped out
    open_file_cache max=5000 inactive=180;

    # however If there is activity though, you can prevent Nginx from removing the cache
    # entry. This directive defines the amount of time an entry must be accessed in order
    # to be eligible for protection, until Nginx decides to clear out older entries to free up
    # some space.
    open_file_cache_min_uses 3;

    # Enables or disables logging of sub-requests triggered by internal redirects
    # or SSI requests
    log_subrequest on;

    # Nginx will issue log messages for every operation performed by the rewrite engine
    # at the notice error level
    rewrite_log on;

    # merging multiple consecutive slashes in a URI (eg //. Useful!!!)
    merge_slashes on;

    # whether or not Nginx should inform the clients of the running version number.
    # it might be a good idea to hide your version number for security reasons
    server_tokens off;

    # Setting root
    root /var/www/html/;

    # Set proxy headers for the passthrough (https://www.djm.org.uk/wordpress-nginx-reverse-proxy-caching-setup/)
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Let the Set-Cookie header through.
    proxy_pass_header Set-Cookie;

    # FastCGI cache exception rules for wordpress (https://rtcamp.com/wordpress-nginx/tutorials/single-site/fastcgi-cache-with-purging/)
    set $fastcgi_skipcache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
        set $fastcgi_skipcache 1;
    }

    if ($query_string != "") {
        set $fastcgi_skipcache 1;
    }

    if ($http_x_custom_header) {
        set $fastcgi_skipcache 0;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
        set $fastcgi_skipcache 1;
    }

    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $fastcgi_skipcache 1;
    }

    # a generic example of ignoring cache for a url
    # if ($uri ~ "/path/matches/") {
    #     set $fastcgi_skipcache 1;
    # }

    # https://gist.github.com/magnetikonline/10450786
    if ($http_cookie ~ "users_login_cookie") {
        set $fastcgi_skipcache 1;
    }

    # Setting default indexes: http://wiki.nginx.org/Pitfalls
    index  index.html index.htm index.php;

    # the default location. Rewrite location to point a index file
    location / {
        # try files or directory. If it doesnâ€™t find a directory or a file,
        # it performs an internal redirect to /index.php passing the query
        # string arguments as parameters.
        # http://www.lowendguide.com/3/webservers/wordpress-permalinks-with-nginx/
        try_files $uri $uri/ /blog/index.php?$args;
    }

    # Enable php-fpm status pages:
    # https://rtcamp.com/tutorials/php/fpm-status-page/
    location ~ ^/(status|ping)$ {
        # restrict access for security reasons (commented in development)
        # access_log off;
        # allow 127.0.0.1;
        # allow 1.2.3.4#your-ip;
        # deny all;

        include fastcgi_params;
        fastcgi_pass php_fpm;

        # Setting the script filename (they are not script, so /status and /status for instance)
        fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
    }

    # pass the PHP scripts to FastCGI server listening on php:9000
    location ~ \.php$ {
        fastcgi_index   index.php;
        fastcgi_pass    php_fpm;

        # http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_split_path_info
        fastcgi_split_path_info       ^(.+\.php)(.*)$;

        # For instance, if a request is made for /forum/avatar/1232.jpg/file.php which does
        # not exist but if /forum/avatar/1232.jpg does, the PHP interpreter will process
        # /forum/avatar/1232.jpg instead. If this contains embedded PHP code, this code
        # will be executed accordingly. php files inside upload directories are disabled by this stanza
        # http://codex.wordpress.org/Nginx
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

        # All the default params
        include         fastcgi_params;

        # note: adds a HTTP response header "X-Cache" returning HIT/MISS/BYPASS/EXPIRED for cache use status
        add_header X-Cache $upstream_cache_status;

        # The "fastcgicache" directive references to the memory zone name which we specified
        # in the "fastcgicache_path" directive and stores the cache in this area.
        fastcgi_cache fastcgicache;
        fastcgi_cache_bypass $fastcgi_skipcache;
        fastcgi_no_cache $fastcgi_skipcache;

        #Setting the script filename with php_fpm positions
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # for generic files
    location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        access_log off;	log_not_found off; expires max;
    }

    # Global restrictions configuration file.
    # Designed to be included in any server {} block.</p>
    # https://codex.wordpress.org/Nginx
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location ~ /\. {
        deny  all;
        access_log off;
        log_not_found off;
    }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }


    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny  all;
    }

}
